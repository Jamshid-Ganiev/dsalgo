{"/languages/Python":{"title":"Python","data":{"":"Bu yerda siz o'rganib borayotgan ma'lumotlar tuzilmalari va algoritmlarning Python dasturlash tilidagi kod implementatsiyasini\nko'rib o'rganib chiqsangiz bo'ladi. Biz imkon qadar kodlarni sizga tushuntirishga va sizni tasavvuringizni uyg'otishga harakat qilamiz.\nHar bir mavzuga tegishli kodlarni shu yerdan topishingiz mumkin. Agar sizga boshqa bir mavzu kerak bo'lsa o'ng tomondagi menu orqali\no'zingiz hohlagan mavzuga tez o'tishingiz mumkin.Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!","big-o#Big O":"Big O notationda o'rgangan bilimlaringizni keling endi amaliyotlarda misollar bilan ko'rib chiqamiz va biz odatiy yozadigan kodlarimizni\nanaliz qilishni o'rganamiz. Misol uchun pastdagi kodga e'tibor bering:\ndef juftlar(arry: list[int]) -> list:\nresult = []\nfor num in arry:\nif num % 2 == 0:\nresult.append(num)\nreturn result\nYuqoridagi kodning Time va Space Complexitysi nima deb o'ylaysiz? Keling tahlil qilamiz. Bu yerda for loop bor  demak bizni kodimiz\nlinear harakat qiladi ya'ni bu qandaydir shartlar asosida emas berilgan uzunlik asosida birma-bir iteratsiya bo'ladi. Shuning xisobiga\nko'ra bu n marta harakat qilayabdi. Ochilgan List esa har bir element uchun bitta xotira sarflaydi. Agar funksiyaga berilgan array\nichida faqat juft sonlar bo'lsa loop barcha listni iteratsiya qiladi. Biz shu tomonini ham o'ylagan holda uni ham n ta element oladi\ndeb xisoblaymiz.Time: O(n)Space : O(n)Keling endi keyingi misolga to'xtasak:\ndef access_element(arr: list, index : int) -> any:\nreturn arr[index]\nUshbu misolda bizning funksiya List olib uning berilgan indeksidagi elementni qaytarayabdi. Listlarda indeksga kirish uchun ketkaziladigan\nvaqt O(1) bo'ladi. Xotira esa bu yerda 1 chunki biz hech qanday yangi data type yaratmayabmiz. Demak xulosa:Time: O(1)Space : O(1)\ndef summing(numbers: list) -> int:\nresult = 0\nfor num in numbers:\nresult += num\nreturn result\nMana bu misolga qaraylik, bu yerda vaziyat biroz boshqacha endi biz result o'zgaruvchisini increment qilayabmiz. Ya'ni ortiqcha\no'zgaruvchilar ochmagan holda faqat result ustida amal qilib yana unga qiymat saqlayabmiz (shunchaki update qilayabmiz). Shuni\ninobatga olgan holda bu yerda space O(1) ga, time esa O(n) ga teng. Chunki bizning loop nta amal bajaradi eng ko'pi bilan.Bunday misollarni ko'plab keltirishimiz mumkin ammo keling endi qolganlarini yo'l-yo'lakay ko'rib tahlil qilib ketamiz...","array#Array":"Python dasturlash tilida Array degan built-in data structure mavjud emas ammo uning ekvivalenti bor u esa List.\nList - turli xil data typedagai ma'lumotlarni saqlab turuvchi konteyner xisoblanadi.\n\n# Pythonda List yaratish:\nmy_list = ['o', 'apple', 17, 3.14]\n\n# Bo'sh list yaratish:\nnew_list = list()\n\n# yoki\nnew_list = []","list-metodlari#List metodlari":"Yuqoridagi rasmda ba'zi metodlar keltirilgan ularni shunchaki ko'rib emas balkim ishlatib ko'rishni ham maslahat beraman. Agar siz ko'proq\nmetodlar haqida o'rganmoqchi bo'lsangiz Python dokumentatsiyasida ko'proq yoritib o'tilgan.","indexes#Indexes":"List ichidagi elementlarni access qilish ya'ni kirish uchun biz indexlardan foydalanamiz. Yuqoridagi rasmda ko'rib turganingizdek sanoq 1\ndan emas 0 dan boshlangan.\nXazil: Agar sizga biror dasturchi sen mening birinchi muhabbatimsan desa ishonmang. Chunki dasturlashda sanoq 0dan boshlanadi. ðŸ˜Œ\n\nnums = [3, 8, 1, 0, 5, -2, 32] # Rasmdagi list\n\nprint(nums[3]) # List ichidan 3chi indeksdagi qiymatni oldik.","slicing#Slicing":"Tasavvur qiling sizda 100ta elementli list bor ammo sizga uni faqat 20-50 ideks oralig'idagi qiymatlari kerak. Bunday holatda sizga\nlistdagi qiymatlarni o'chirish emas balkim shunchaki uni bo'laklarga bo'lish kifoya qiladi.\n\n\nlist[start:stop:step]\n# start - boshlang'ich nuqta\n# step - tugash nuqtasi\n# step - qadam\nls = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nls[2:]    # [3, 4, 5, 6, 7, 8, 9, 10]\nls[1:6]   # [2, 3, 4, 5, 6]\nls[:5]    # [1, 2, 3, 4, 5]\nls[1:4:2] # [2, 4]\nls[::2]   # [1, 3, 5, 7, 9]\nls[::-1]  # [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\nls[::-2]  # [10, 8, 6, 4, 2]\nYuqorida keltirilgan misollarni tushunishlik uchun ozgina tahlil qilib o'zingiz ham mashq qilib ko'ring.","python-array#Python Array":"Pythonda Array bor va uni yaratish uchun yoki tushunish uchun siz shunchaki array Python\nStandart Library ishlatishingiz kerak:\nfrom array import array\n\nnums = array('l', [1, 2, 3, 4, 5])\n\nnums.append(0) # array('l', [1, 2, 3, 4, 5, 0])\nnums.remove(3) # array('l', [1, 2, 4, 5, 0])\n...\n\nprint(nums[2]) # 4\n# Qolgan amallar xuddi listdek ishlatilaveradi. array yaratilishi boshqacha\nAmmo biz ushbu qo'llanmada bu kutubxonani to'liq ishlatmaymiz ammo sizga list va arrayni taqqoslab ular qanday ishlatilishini qisqacha ko'rsatib\no'tdik. Qolgan ma'lumotlarni link orqali o'zingiz o'rganishingiz mumkin.\nhttps://docs.python.org/3/library/array.html\nKeling endi ularni farqi nimadaligiga biroz chuqurroq kirishamiz. Pythonda hamma narsa object, xattoki funksiyalar ham. List esa juda moslashuvchan\nva ixtiyoriy ma'lumotlarni saqlashi mumkin, ammo ular Arrayga qaraganda ko'proq xotira ishlatadi. Pastdagi rasmga e'tibor bering:\n\nHar bir list pointer ichidagi pointer blokini xosil qiladi, natijada biz birinchi doim memory pointerga boramiz va undan keyin object\npointerga boramiz. Tushunarliroq qiladigan bo'lsak tasavvur qiling sizda my_list = [1, 2, 3, 4, 5] mavjud va siz my_list[2] ni olmoqchisiz.\nBu yerda python interpreter birinchi bo'lib my_listni xotirada qayerda joylashganini aniqlaydi. So'ngra my_listda 2chi indexni xisoblaydi va\nkeyin sizga siz hohlagan elementni qaytaradi.Arrayda esa xolat biroz boshqacha va keling yuqoridagi list misolini array qilib olamiz. Python interpreter my_list degan arrayni\nbirinchi qiymatini qidiradi. Va xotirani hozirgi hex qiymatiga biz hohlagan indeksni qo'shish orqali o'sha elementga oson kiradi.Listni afzalliklaridan ba'zilari bu uning kengayib, kichirayishida. List yana boshqa turdagi ma'lumotlarni ham saqlay oladi.Arrayning afzalliklaridan ba'zilari bu uning tezligida va listga nisbatan qaralganda ancha kam xotira sarflashida. Array faqat\nbir xil turdagi ma'lumotlarni o'zida saqlay oladi va uning xajmi o'zgarmaydi.","challenges#Challenges":"Merge Two sorted list\nFind two number that sums up to K","linked-list#Linked List":"Linked List pythonda built-in data structure sifatida kiritilmagan. Biz uni classlar yordamida yaratamiz chunki pythonda hamma narsa object.","singly-linked-list#Singly Linked List":"","doubly-linked-list#Doubly Linked List":"","circular-linked-list#Circular Linked List":""}},"/languages/C":{"title":"C","data":{"":"Bu yerda siz o'rganib borayotgan ma'lumotlar tuzilmalari va algoritmlarning C dasturlash tilidagi kod implementatsiyasini\nko'rib o'rganib chiqsangiz bo'ladi. Biz imkon qadar kodlarni sizga tushuntirishga va sizni tasavvuringizni uyg'otishga harakat qilamiz.\nHar bir mavzuga tegishli kodlarni shu yerdan topishingiz mumkin. Agar sizga boshqa bir mavzu kerak bo'lsa o'ng tomondagi menu orqali\no'zingiz hohlagan mavzuga tez o'tishingiz mumkin.Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!","big-o#Big O":"Big O notationda o'rgangan bilimlaringizni keling endi amaliyotlarda misollar bilan ko'rib chiqamiz va biz odatiy yozadigan kodlarimizni\nanaliz qilishni o'rganamiz. Misol uchun pastdagi kodga e'tibor bering:"}},"/languages/C++":{"title":"C++","data":{"":"Bu yerda siz o'rganib borayotgan ma'lumotlar tuzilmalari va algoritmlarning C++ dasturlash tilidagi kod implementatsiyasini\nko'rib o'rganib chiqsangiz bo'ladi. Biz imkon qadar kodlarni sizga tushuntirishga va sizni tasavvuringizni uyg'otishga harakat qilamiz.\nHar bir mavzuga tegishli kodlarni shu yerdan topishingiz mumkin. Agar sizga boshqa bir mavzu kerak bo'lsa o'ng tomondagi menu orqali\no'zingiz hohlagan mavzuga tez o'tishingiz mumkin.Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!","big-o#Big O":"Big O notationda o'rgangan bilimlaringizni keling endi amaliyotlarda misollar bilan ko'rib chiqamiz va biz odatiy yozadigan kodlarimizni\nanaliz qilishni o'rganamiz. Misol uchun pastdagi kodga e'tibor bering:"}},"/languages/Go":{"title":"Go","data":{"":"Bu yerda siz o'rganib borayotgan ma'lumotlar tuzilmalari va algoritmlarning Go dasturlash tilidagi kod implementatsiyasini\nko'rib o'rganib chiqsangiz bo'ladi. Biz imkon qadar kodlarni sizga tushuntirishga va sizni tasavvuringizni uyg'otishga harakat qilamiz.\nHar bir mavzuga tegishli kodlarni shu yerdan topishingiz mumkin. Agar sizga boshqa bir mavzu kerak bo'lsa o'ng tomondagi menu orqali\no'zingiz hohlagan mavzuga tez o'tishingiz mumkin.Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!","big-o#Big O":"Big O notationda o'rgangan bilimlaringizni keling endi amaliyotlarda misollar bilan ko'rib chiqamiz va biz odatiy yozadigan kodlarimizni\nanaliz qilishni o'rganamiz. Misol uchun pastdagi kodga e'tibor bering:"}},"/languages/Java":{"title":"Java","data":{"":"Bu yerda siz o'rganib borayotgan ma'lumotlar tuzilmalari va algoritmlarning Java dasturlash tilidagi kod implementatsiyasini\nko'rib o'rganib chiqsangiz bo'ladi. Biz imkon qadar kodlarni sizga tushuntirishga va sizni tasavvuringizni uyg'otishga harakat qilamiz.\nHar bir mavzuga tegishli kodlarni shu yerdan topishingiz mumkin. Agar sizga boshqa bir mavzu kerak bo'lsa o'ng tomondagi menu orqali\no'zingiz hohlagan mavzuga tez o'tishingiz mumkin.Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!","big-o#Big O":"Big O notationda o'rgangan bilimlaringizni keling endi amaliyotlarda misollar bilan ko'rib chiqamiz va biz odatiy yozadigan kodlarimizni\nanaliz qilishni o'rganamiz. Misol uchun pastdagi kodga e'tibor bering:"}},"/languages/Javascript":{"title":"JavaScript","data":{"":"Bu yerda siz o'rganib borayotgan ma'lumotlar tuzilmalari va algoritmlarning JavaScript dasturlash tilidagi kod implementatsiyasini\nko'rib o'rganib chiqsangiz bo'ladi. Biz imkon qadar kodlarni sizga tushuntirishga va sizni tasavvuringizni uyg'otishga harakat qilamiz.\nHar bir mavzuga tegishli kodlarni shu yerdan topishingiz mumkin. Agar sizga boshqa bir mavzu kerak bo'lsa o'ng tomondagi menu orqali\no'zingiz hohlagan mavzuga tez o'tishingiz mumkin.Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!","big-o#Big O":"Big O notationda o'rgangan bilimlaringizni keling endi amaliyotlarda misollar bilan ko'rib chiqamiz va biz odatiy yozadigan kodlarimizni\nanaliz qilishni o'rganamiz. Misol uchun pastdagi kodga e'tibor bering:"}},"/languages/Rust":{"title":"Rust","data":{"":"Bu yerda siz o'rganib borayotgan ma'lumotlar tuzilmalari va algoritmlarning Rust dasturlash tilidagi kod implementatsiyasini\nko'rib o'rganib chiqsangiz bo'ladi. Biz imkon qadar kodlarni sizga tushuntirishga va sizni tasavvuringizni uyg'otishga harakat qilamiz.\nHar bir mavzuga tegishli kodlarni shu yerdan topishingiz mumkin. Agar sizga boshqa bir mavzu kerak bo'lsa o'ng tomondagi menu orqali\no'zingiz hohlagan mavzuga tez o'tishingiz mumkin.Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!","big-o#Big O":"Big O notationda o'rgangan bilimlaringizni keling endi amaliyotlarda misollar bilan ko'rib chiqamiz va biz odatiy yozadigan kodlarimizni\nanaliz qilishni o'rganamiz. Misol uchun pastdagi kodga e'tibor bering:"}},"/languages/Swift":{"title":"Swift","data":{"":"Bu yerda siz o'rganib borayotgan ma'lumotlar tuzilmalari va algoritmlarning Swift dasturlash tilidagi kod implementatsiyasini\nko'rib o'rganib chiqsangiz bo'ladi. Biz imkon qadar kodlarni sizga tushuntirishga va sizni tasavvuringizni uyg'otishga harakat qilamiz.\nHar bir mavzuga tegishli kodlarni shu yerdan topishingiz mumkin. Agar sizga boshqa bir mavzu kerak bo'lsa o'ng tomondagi menu orqali\no'zingiz hohlagan mavzuga tez o'tishingiz mumkin.Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!Har bir kodni ustida komment orqali u nima vazifa bajarishini yozib o'tishga harakat qilamiz. Uni o'zingiz ham sinab ko'rishni unutmang!","big-o#Big O":"Big O notationda o'rgangan bilimlaringizni keling endi amaliyotlarda misollar bilan ko'rib chiqamiz va biz odatiy yozadigan kodlarimizni\nanaliz qilishni o'rganamiz. Misol uchun pastdagi kodga e'tibor bering:"}}}